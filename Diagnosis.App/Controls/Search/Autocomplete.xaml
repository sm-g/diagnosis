<UserControl x:Class="Diagnosis.App.Controls.Search.Autocomplete"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:beh="clr-namespace:Diagnosis.App.Behaviors"
             xmlns:controls="clr-namespace:Diagnosis.App.Controls"
             xmlns:search="clr-namespace:Diagnosis.App.Controls.Search"
             xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             GotFocus="UserControl_GotFocus"
             LostFocus="UserControl_LostFocus"
             LostKeyboardFocus="UserControl_LostKeyboardFocus"
             x:Name="autocomplete"
             beh:ClipboardBehavior.ClipboardTarget="True"
             mc:Ignorable="d"
             d:DesignHeight="300"
             d:DesignWidth="300">    
    <UserControl.InputBindings>
        <KeyBinding Key="F2"
                    Command="{Binding EditCommand}" />
        <KeyBinding Key="Space"
                    Modifiers="Control"
                    Command="{Binding ShowSuggestionsCommand}" />
    </UserControl.InputBindings>
    <UserControl.Resources>
        <InputBindingCollection x:Shared="False"
                                x:Key="TagInputBindings">
            <KeyBinding Key="Delete"
                        Command="{Binding DataContext.DeleteCommand,ElementName=autocomplete}" />
            <KeyBinding Key="F"
                        Modifiers="Alt"
                        Command="{Binding DataContext.SendToSearchCommand,ElementName=autocomplete}" />
        </InputBindingCollection>
        <InputBindingCollection x:Shared="False"
                                x:Key="SuggestionInputBindings">
            <KeyBinding Key="Enter"
                        Command="{Binding DataContext.EnterCommand,ElementName=suggestions}"
                        CommandParameter="{Binding DataContext.EditingTag,ElementName=suggestions}" />
            <KeyBinding Key="Enter"
                        Modifiers="Shift"
                        Command="{Binding DataContext.InverseEnterCommand,ElementName=suggestions}"
                        CommandParameter="{Binding DataContext.EditingTag,ElementName=suggestions}" />
            <MouseBinding MouseAction="LeftDoubleClick"
                          Command="{Binding DataContext.EnterCommand,ElementName=suggestions}"
                          CommandParameter="{Binding DataContext.EditingTag,ElementName=suggestions}" />
        </InputBindingCollection>
    </UserControl.Resources>
    <!-- Autocomplete -->
    <StackPanel>
        <ListBox x:Name="input"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 HorizontalContentAlignment="Stretch"
                 ItemsSource="{Binding Tags}"
                 SelectedItem="{Binding SelectedTag}"
                 SelectionMode="Extended"
                 dd:DragDrop.IsDragSource="True"
                 dd:DragDrop.IsDropTarget="True"
                 dd:DragDrop.DropHandler="{Binding DropHandler}"
                 dd:DragDrop.DragHandler="{Binding DragHandler}"
                 GotFocus="input_GotFocus"
                 LostFocus="input_LostFocus"
                 PreviewKeyDown="input_PreviewKeyDown"
                 PreviewKeyUp="input_PreviewKeyUp"
                 SelectionChanged="input_SelectionChanged">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <controls:WrapPanelLastChildFill />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.InputBindings>
                <KeyBinding Key="Enter"
                            Command="{Binding EnterCommand}"
                            CommandParameter="{Binding EditingTag}" />
                <KeyBinding Key="Enter"
                            Modifiers="Shift"
                            Command="{Binding InverseEnterCommand}"
                            CommandParameter="{Binding EditingTag}" />
            </ListBox.InputBindings>
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}"
                       BasedOn="{StaticResource {x:Type ListBoxItem}}">
                    <Setter Property="beh:Attached.InputBindings"
                            Value="{StaticResource TagInputBindings}" />
                    <Setter Property="HorizontalContentAlignment"
                            Value="Stretch" />
                    <Setter Property="Padding"
                            Value="2" />

                    <Setter Property="IsSelected"
                            Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="beh:FocusExtension.Direct"
                            Value="True" />
                    <Setter Property="beh:FocusExtension.IsFocused"
                            Value="{Binding IsListItemFocused, Mode=TwoWay}" />

                    <Setter Property="Tag"
                            Value="{Binding DataContext, ElementName=autocomplete}" />

                    <Setter Property="ContextMenu">
                        <Setter.Value>
                            <ContextMenu>
                                <!-- Autocomplete, для выделенных -->
                                <MenuItem Header="Редактировать"
                                          InputGestureText="F2"
                                          Command="{Binding PlacementTarget.Tag.EditCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                <MenuItem Header="Удалить"
                                          InputGestureText="Del"
                                          Command="{Binding PlacementTarget.Tag.DeleteCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                <MenuItem Header="Искать"
                                          InputGestureText="Alt + F"
                                          Command="{Binding PlacementTarget.Tag.SendToSearchCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                <!--<MenuItem Command="{Binding ConvertCommand}">
                                    <MenuItem.Header>
                                        <TextBlock>
                                <Run>
                                    <Run.Style>
                                        <Style TargetType="Run">
                                            <Setter Property="Text"
                                                        Value="Создать слово" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding BlankType}"
                                                             Value="{x:Static auto:Tag+BlankTypes.Word}">
                                                    <Setter Property="Text"
                                                                Value="Убрать слово" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Run.Style>
                                </Run> «<Run Text="{Binding Query, TargetNullValue=' — '}" />»
                                        </TextBlock>
                                    </MenuItem.Header>
                                </MenuItem>-->
                                <!-- TagViewModel -->
                                <Separator />
                                <MenuItem Header="Добавить слева"
                                          Command="{Binding AddLeftCommand}" />
                                <MenuItem Header="Добавить справа"
                                          Command="{Binding AddRightCommand}" />
                                <Separator />
                                <!-- для выделенных -->
                                <MenuItem Command="{x:Static ApplicationCommands.Cut}" />
                                <MenuItem Command="{x:Static ApplicationCommands.Copy}" />
                                <MenuItem Command="{x:Static ApplicationCommands.Paste}" />
                            </ContextMenu>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <search:Tag MinWidth="40"
                                LostKeyboardFocus="Tag_LostKeyboardFocus"
                                GotKeyboardFocus="Tag_GotKeyboardFocus"
                                LostFocus="Tag_LostFocus" />
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Popup x:Name="popup"
               Height="Auto"
               Width="auto"
               StaysOpen="True"
               Placement="Bottom"
               GotFocus="popup_GotFocus"
               LostFocus="popup_LostFocus"
               IsOpen="{Binding IsPopupOpen}"
               HorizontalAlignment="Left"
               Grid.RowSpan="2">

            <ListBox x:Name="suggestions"
                     MaxHeight="100"
                     FocusManager.IsFocusScope="True"
                     ItemsSource="{Binding Suggestions}"
                     SelectedItem="{Binding SelectedSuggestion, Mode=TwoWay}"
                     SelectionChanged="suggestions_SelectionChanged"
                     HorizontalContentAlignment="Stretch">
                <ListBox.InputBindings>
                    <KeyBinding Key="Enter"
                                Command="{Binding EnterCommand}"
                                CommandParameter="{Binding EditingTag}" />
                </ListBox.InputBindings>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}"
                           BasedOn="{StaticResource {x:Type ListBoxItem}}">
                        <Setter Property="beh:Attached.InputBindings"
                                Value="{StaticResource SuggestionInputBindings}" />
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </Popup>
    </StackPanel>
</UserControl>