<UserControl x:Class="Diagnosis.Client.App.Controls.Search.Autocomplete"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:Diagnosis.Client.App.Controls"
             xmlns:search="clr-namespace:Diagnosis.Client.App.Controls.Search"
             xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             xmlns:diag="http://schemas.smg.com/diagnosis"
             GotKeyboardFocus="autocomplete_GotKeyboardFocus"
             LostFocus="UserControl_LostFocus"
             LostKeyboardFocus="UserControl_LostKeyboardFocus"
             Focusable="True"
             x:Name="autocomplete"
             diag:ClipboardBehavior.ClipboardTarget="True"
             diag:HelpProvider.Topic="autocompleteenter"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance diag:AutocompleteViewModel, IsDesignTimeCreatable=False}"
             d:DesignHeight="300"
             d:DesignWidth="300">
    <UserControl.InputBindings>
        <KeyBinding Key="F2"
                    Command="{Binding EditCommand}" />
        <KeyBinding Key="F8"
                    Command="{Binding ToggleConfidenceCommand}" />
    </UserControl.InputBindings>
    <UserControl.Resources>
        <InputBindingCollection x:Shared="False"
                                x:Key="TagInputBindings">
            <KeyBinding Key="Delete"
                        Command="{Binding DataContext.DeleteCommand,ElementName=autocomplete}" />
            <KeyBinding Key="F"
                        Modifiers="Control"
                        Command="{Binding DataContext.SendToSearchCommand,ElementName=autocomplete}" />
            <MouseBinding MouseAction="LeftDoubleClick"
                          Command="{Binding EditCommand}" />
        </InputBindingCollection>
        <InputBindingCollection x:Shared="False"
                                x:Key="SuggestionInputBindings">
            <KeyBinding Key="Enter"
                        Command="{Binding DataContext.EnterCommand,ElementName=suggestions}"
                        CommandParameter="{Binding DataContext.EditingTag,ElementName=suggestions}" />
            <KeyBinding Gesture="Shift+Enter"
                        Command="{Binding DataContext.InverseEnterCommand,ElementName=suggestions}"
                        CommandParameter="{Binding DataContext.EditingTag,ElementName=suggestions}" />
            <MouseBinding MouseAction="LeftDoubleClick"
                          Command="{Binding DataContext.EnterCommand,ElementName=suggestions}"
                          CommandParameter="{Binding DataContext.EditingTag,ElementName=suggestions}" />
        </InputBindingCollection>
    </UserControl.Resources>
    <!-- Autocomplete -->
    <StackPanel>
        <ListBox x:Name="input"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 ItemsSource="{Binding Tags}"
                 SelectedItem="{Binding SelectedTag}"
                 SelectionMode="Extended"
                 dd:DragDrop.IsDragSource="{Binding IsDragSourceEnabled}"
                 dd:DragDrop.IsDropTarget="{Binding IsDropTargetEnabled}"
                 dd:DragDrop.DropHandler="{Binding DropHandler}"
                 dd:DragDrop.DragHandler="{Binding DragHandler}"
                 GotFocus="input_GotFocus"
                 LostFocus="input_LostFocus"
                 GotKeyboardFocus="input_GotKeyboardFocus"
                 PreviewKeyDown="input_PreviewKeyDown"
                 PreviewKeyUp="input_PreviewKeyUp"
                 SelectionChanged="input_SelectionChanged">
            <ListBox.Style>
                <Style TargetType="ListBox">
                    <Setter Property="BorderThickness"
                            Value="1" />
                    <Setter Property="Padding"
                            Value="1" />
                    <Setter Property="HorizontalContentAlignment"
                            Value="Stretch" />
                    <Setter Property="SnapsToDevicePixels"
                            Value="True" />
                </Style>
            </ListBox.Style>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <diag:WrapPanelLastChildFill />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.InputBindings>
                <KeyBinding Key="Enter"
                            Command="{Binding EnterCommand}"
                            CommandParameter="{Binding EditingTag}" />
                <KeyBinding Gesture="Shift+Enter"
                            Command="{Binding InverseEnterCommand}"
                            CommandParameter="{Binding EditingTag}" />
                <KeyBinding Gesture="Control+Enter"
                            Command="{Binding ControlEnterCommand}"
                            CommandParameter="{Binding EditingTag}" />
                <KeyBinding Gesture="Control+Space"
                            Command="{Binding ShowSuggestionsCommand}" />
                <KeyBinding Gesture="Control+Alt+Space"
                            Command="{Binding ToggleSuggestionModeCommand}" />
            </ListBox.InputBindings>
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}"
                       BasedOn="{StaticResource {x:Type ListBoxItem}}">
                    <Setter Property="diag:Attached.InputBindings"
                            Value="{StaticResource TagInputBindings}" />
                    <Setter Property="HorizontalContentAlignment"
                            Value="Stretch" />
                    <Setter Property="Padding"
                            Value="0" />
                    <Setter Property="Margin"
                            Value="0" />
                    <Setter Property="BorderThickness"
                            Value="1" />
                    <Setter Property="BorderBrush"
                            Value="White" />
                    <Setter Property="SnapsToDevicePixels"
                            Value="True" />

                    <Setter Property="IsSelected"
                            Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="diag:FocusExtension.Direct"
                            Value="True" />
                    <Setter Property="diag:FocusExtension.IsFocused"
                            Value="{Binding IsListItemFocused, Mode=TwoWay}" />

                    <Setter Property="Tag"
                            Value="{Binding DataContext, ElementName=autocomplete}" />

                    <Setter Property="ContextMenu">
                        <Setter.Value>
                            <ContextMenu>
                                <!-- AutocompleteViewModel, для всех выделенных -->
                                <MenuItem Header="Редактировать"
                                          InputGestureText="F2"
                                          Command="{Binding PlacementTarget.Tag.EditCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                <MenuItem Header="Удалить"
                                          Style="{StaticResource deleteMenuItem}"
                                          Command="{Binding PlacementTarget.Tag.DeleteCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                <MenuItem Header="Искать"
                                          Style="{StaticResource searchMenuItem}"
                                          Visibility="{Binding PlacementTarget.Tag.SendToSearchCommand.IsVisible, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          Command="{Binding PlacementTarget.Tag.SendToSearchCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                <MenuItem Header="Изменить уверенность"
                                          InputGestureText="F8"
                                          Visibility="{Binding PlacementTarget.Tag.ToggleConfidenceCommand.IsVisible, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          Command="{Binding PlacementTarget.Tag.ToggleConfidenceCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />

                                <!-- TagViewModel -->
                                <Separator Visibility="{Binding AddLeftCommand.IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                <MenuItem Header="Добавить слева"
                                          Visibility="{Binding AddLeftCommand.IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                                          Command="{Binding AddLeftCommand}" />
                                <MenuItem Header="Добавить справа"
                                          Visibility="{Binding AddRightCommand.IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                                          Command="{Binding AddRightCommand}" />
                                <Separator />
                                <!-- для выделенных -->
                                <MenuItem Style="{StaticResource cutMenuItem}" />
                                <MenuItem Style="{StaticResource copyMenuItem}" />
                                <MenuItem Style="{StaticResource pasteMenuItem}" />
                            </ContextMenu>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter Property="Padding"
                                    Value="1" />
                            <Setter Property="BorderThickness"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Padding"
                                    Value="1" />
                            <Setter Property="BorderThickness"
                                    Value="0" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <search:Tag MinWidth="40"
                                LostKeyboardFocus="Tag_LostKeyboardFocus"
                                GotKeyboardFocus="Tag_GotKeyboardFocus"
                                LostFocus="Tag_LostFocus" />
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <Popup x:Name="popup"
               Height="Auto"
               Width="auto"
               StaysOpen="True"
               Placement="Bottom"
               GotFocus="popup_GotFocus"
               LostFocus="popup_LostFocus"
               IsOpen="{Binding IsPopupOpen}"
               HorizontalAlignment="Left"
               Grid.RowSpan="2">

            <ListBox x:Name="suggestions"
                     MaxHeight="100"
                     FocusManager.IsFocusScope="True"
                     ItemsSource="{Binding Suggestions}"
                     SelectedItem="{Binding SelectedSuggestion, Mode=TwoWay}"
                     SelectionChanged="suggestions_SelectionChanged"
                     HorizontalContentAlignment="Stretch">
                <ListBox.InputBindings>
                    <KeyBinding Key="Enter"
                                Command="{Binding EnterCommand}"
                                CommandParameter="{Binding EditingTag}" />
                </ListBox.InputBindings>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}"
                           BasedOn="{StaticResource {x:Type ListBoxItem}}">
                        <Setter Property="diag:Attached.InputBindings"
                                Value="{StaticResource SuggestionInputBindings}" />
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <DockPanel LastChildFill="True">
                            <DockPanel.Style>
                                <Style TargetType="DockPanel">
                                    <Setter Property="Background"
                                            Value="Transparent" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsNew}"
                                                     Value="True">
                                            <Setter Property="ToolTip"
                                                    Value="{Binding NewWordToolTip, Source={StaticResource Resources}}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DockPanel.Style>
                            <!--<TextBlock Visibility="{Binding IsAlter, Converter={StaticResource BooleanToVisibilityConverter}}" Text="НЕ " />-->

                            <TextBlock Text="{Binding}"
                                       FontSize="{DynamicResource ContentFontSize}" />
                            <TextBlock DockPanel.Dock="Right"
                                       Visibility="{Binding IsNew, Converter={StaticResource BooleanToVisibilityConverter}}"
                                       Text="★" />
                            <Separator MinWidth="30"
                                       Height="0"
                                       Visibility="{Binding IsNew, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </DockPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Popup>
    </StackPanel>
</UserControl>