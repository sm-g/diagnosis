<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:mahControls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--This styles overwrites theme styles-->

    <!--  base control styles  -->

    <Style BasedOn="{StaticResource {x:Type DatePicker}}"
           TargetType="DatePicker">
        <Setter Property="FirstDayOfWeek"
                Value="Monday" />
    </Style>

    <!--textblock-->
    <Style TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource {x:Type TextBlock}}">
        <!--<Setter Property="FontSize"
                Value="{DynamicResource ContentFontSize}" />-->
        <Style.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Foreground"
                        Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--<Style TargetType="AccessText">
        <Setter Property="FontSize"
                Value="{DynamicResource LabelFontSize}" />
    </Style>-->
    
    <!--image-->
    <Style x:Key="EnableDisableImageStyle"
           TargetType="{x:Type Image}">
        <Style.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Opacity"
                        Value="0.75" />
                <Setter Property="BitmapEffect">
                    <Setter.Value>
                        <BlurBitmapEffect Radius="2.0"
                                          KernelType="Gaussian" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Tree-->

    <Style BasedOn="{StaticResource {x:Type TreeView}}"
           TargetType="TreeView">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Disabled" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing"
                Value="False" />
        <Setter Property="VirtualizingStackPanel.VirtualizationMode"
                Value="Recycling" />
    </Style>

    <Style BasedOn="{StaticResource {x:Type TreeViewItem}}"
           TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />

        <Setter Property="FontSize"
                Value="{DynamicResource ContentFontSize }" />

        <!-- Hier Vm -->

        <Setter Property="IsSelected"
                Value="{Binding IsSelected}" />
        <Setter Property="IsExpanded"
                Value="{Binding IsExpanded, Mode=TwoWay}" />
    </Style>

    <!--  buttons  -->
    <Style x:Key="DialogButtonsPanel"
           TargetType="{x:Type StackPanel}">
        <Setter Property="Orientation"
                Value="Horizontal" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Style.Resources>
            <Style TargetType="Button"
                   BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="MinWidth"
                        Value="75" />
                <Setter Property="MinHeight"
                        Value="23" />
                <Setter Property="Margin"
                        Value="10,10,0,0" />
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="squareButton"
           BasedOn="{StaticResource {x:Type Button}}"
           TargetType="Button">
        <Setter Property="Width"
                Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />
    </Style>

    <Style x:Key="metroCircleButton"
           BasedOn="{StaticResource MetroCircleButtonStyle}"
           TargetType="Button">
        <Setter Property="Width"
                Value="30" />
        <Setter Property="Height"
                Value="30" />
        <Setter Property="Foreground"
                Value="Gray" />
        <Setter Property="BorderThickness"
                Value="1" />
    </Style>

    <Style x:Key="HelpButton"
           x:Shared="False"
           BasedOn="{StaticResource metroCircleButton}"
           TargetType="Button">
        <Setter Property="ToolTip"
                Value="Помощь (F1)" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="Margin"
                Value="10 0 0 10" />
        <Setter Property="Focusable"
                Value="False" />
        <Setter Property="Command"
                Value="{x:Static ApplicationCommands.Help}" />
        <Setter Property="Content">
            <Setter.Value>
                <Rectangle Width="12"
                           Height="12"
                           Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Uniform"
                                     Visual="{DynamicResource appbar_question}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Setter.Value>
        </Setter>
    </Style>

    <!--toolbar-->
    <Style TargetType="ToolBar">
        <Setter Property="ToolBarTray.IsLocked"
                Value="True" />
    </Style>

    <!--  DataGrid  -->

    <Style x:Key="CellStyle"
           TargetType="DataGridCell"
           BasedOn="{StaticResource {x:Type DataGridCell}}">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="KeyboardNavigation.IsTabStop"
                Value="False" />
    </Style>

    <Style x:Key="SelectableCellStyle"
           BasedOn="{StaticResource CellStyle}"
           TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="KeyboardNavigation.IsTabStop"
                        Value="True" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RightCellTextBlock"
           TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="Margin"
                Value="0,0,5,0" />
    </Style>

    <Style x:Key="MyDataGridStyle"
           TargetType="{x:Type DataGrid}"
           BasedOn="{StaticResource {x:Type DataGrid}}">
        <Setter Property="AutoGenerateColumns"
                Value="False" />
        <Setter Property="IsReadOnly"
                Value="True" />
        <Setter Property="CanUserReorderColumns"
                Value="False" />
        <Setter Property="SelectionUnit"
                Value="FullRow" />
        <Setter Property="SelectionMode"
                Value="Extended" />
        <Setter Property="FontSize"
                Value="{DynamicResource GridRowFontSize}" />

        <Setter Property="GridLinesVisibility"
                Value="None" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="CellStyle"
                Value="{StaticResource CellStyle}" />

        <Setter Property="VirtualizingStackPanel.VirtualizationMode"
                Value="Standard" />
    </Style>
    <!--  forms  -->

    <Style x:Key="formLine"
           TargetType="FrameworkElement">
        <Setter Property="Margin"
                Value="{StaticResource FormLineMargin}" />
    </Style>

    <Style x:Key="conStrTextBox"
           TargetType="TextBox"
           BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="IsReadOnly"
                Value="True" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="mahControls:TextBoxHelper.SelectAllOnFocus"
                Value="True" />
    </Style>

    <Style x:Key="{x:Type Label}"
           TargetType="Label"
           BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="ContentStringFormat"
                Value="{}{0}:" />
        <Setter Property="FontSize"
                Value="{DynamicResource LabelFontSize}" />
    </Style>
    <Style x:Key="label120"
           BasedOn="{StaticResource {x:Type Label}}"
           TargetType="Label">
        <Setter Property="Width"
                Value="120" />
    </Style>
    <Style x:Key="label90"
           BasedOn="{StaticResource {x:Type Label}}"
           TargetType="Label">
        <Setter Property="Width"
                Value="90" />
    </Style>

    <!-- ToolTips -->
    <Style x:Key="SexTooltip"
           TargetType="TextBlock">
        <Setter Property="ToolTip"
                Value="Пол не указан" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMale}"
                         Value="True">
                <Setter Property="ToolTip"
                        Value="Мужчина" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsMale}"
                         Value="False">
                <Setter Property="ToolTip"
                        Value="Женщина" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--  misc  -->
    <Style x:Key="ScreenTitle"
           TargetType="TextBlock">
        <Setter Property="FontSize"
                Value="{DynamicResource ScreenTitleFontSize}" />
    </Style>
</ResourceDictionary>